// src/pages/Tasks.jsx
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import taskService from '../services/taskService';
import {
  Box,
  Grid,
  Card,
  CardContent,
  Typography,
  Chip,
  CircularProgress,
  Divider,
  Table,
  TableBody,
  TableCell,
  TableRow,
  TableHead,
  TableContainer,
  Paper,
  Button
} from '@mui/material';

const Tasks = () => {
  const { user } = useAuth();
  const [tasks, setTasks] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    fetchTasks();
  }, []);

  const fetchTasks = async () => {
    setLoading(true);
    try {
      const result = await taskService.getAll();
      if (result.success) {
        setTasks(result.tasks || []);
      } else {
        setError(result.message);
      }
    } catch (err) {
      setError(err.message || 'Failed to fetch tasks');
    } finally {
      setLoading(false);
    }
  };

  const handleDelete = async (id) => {
    if (!window.confirm('Are you sure you want to delete this task?')) return;

    try {
      const result = await taskService.delete(id);
      if (result.success) {
        setTasks(tasks.filter((t) => t._id !== id));
      } else {
        setError(result.message);
      }
    } catch (err) {
      setError(err.message || 'Failed to delete task');
    }
  };

  const statusColors = {
    pending: 'default',
    'in-progress': 'warning',
    completed: 'success'
  };

  if (loading) {
    return (
      <Box display="flex" justifyContent="center" alignItems="center" minHeight="60vh">
        <CircularProgress size={60} />
      </Box>
    );
  }

  return (
    <Box sx={{ p: 3 }}>
      <Box display="flex" justifyContent="space-between" alignItems="center" mb={3}>
        <Typography variant="h4" fontWeight={600}>
          Tasks
        </Typography>
        <Link to="/tasks/new">
          <Button variant="contained" color="primary">
            New Task
          </Button>
        </Link>
      </Box>

      {error && (
        <Typography color="error" mb={2}>
          {error}
        </Typography>
      )}

      {tasks.length === 0 ? (
        <Typography textAlign="center" color="text.secondary">
          No tasks yet. Create your first task!
        </Typography>
      ) : (
        <TableContainer component={Paper} variant="outlined">
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>Title</TableCell>
                <TableCell>Project</TableCell>
                <TableCell>Priority</TableCell>
                <TableCell>Status</TableCell>
                <TableCell>Actions</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {tasks.map((task) => (
                <TableRow key={task._id}>
                  <TableCell>{task.title}</TableCell>
                  <TableCell>{task.project?.name || '-'}</TableCell>
                  <TableCell>{task.priority || '-'}</TableCell>
                  <TableCell>
                    <Chip
                      label={task.status}
                      color={statusColors[task.status] || 'default'}
                      size="small"
                    />
                  </TableCell>
                  <TableCell>
                    <Link to={`/tasks/${task._id}/edit`}>
                      <Button size="small" variant="outlined" color="info" sx={{ mr: 1 }}>
                        Edit
                      </Button>
                    </Link>
                    <Button
                      size="small"
                      variant="outlined"
                      color="error"
                      onClick={() => handleDelete(task._id)}
                    >
                      Delete
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      )}
    </Box>
  );
};

export default Tasks;
